/**
 * @description 
 */
void rulefunction Stats.initializeStats {
	attribute {
		validity = ACTION;
	}
	scope {

	}
	body {
		Object logger = Log.getLogger("Stats.initializeStats");
		
		// set config constants
		Stats.Config.MapId = "StatsMap";  // global map for all performance stats
		Stats.Config.Count = "Count";
		Stats.Config.MaxValue = "Max";
		Stats.Config.MinValue = "Min";
		Stats.Config.Value = "Value";
		
		// setup 4 concurrent maps for stats
		Log.log(logger, "info", "Create stats repo '%s'", Stats.Config.MapId);
		Object repo = Collections.Map.createHashMapWithId(Stats.Config.MapId);
		Collections.Map.put(repo, Stats.Config.Count, Collections.Map.Concurrent.createConcurrentHashMap());
		Collections.Map.put(repo, Stats.Config.MaxValue, Collections.Map.Concurrent.createConcurrentHashMap());
		Collections.Map.put(repo, Stats.Config.MinValue, Collections.Map.Concurrent.createConcurrentHashMap());
		Collections.Map.put(repo, Stats.Config.Value, Collections.Map.Concurrent.createConcurrentHashMap());
	}
}